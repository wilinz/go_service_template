// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "https://github.com/wilinz/EazyWrite",
        "contact": {
            "name": "API Support",
            "url": "https://github.com/wilinz/EazyWrite",
            "email": "weilizan71@outlook.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/account/info": {
            "get": {
                "description": "获取用户的个人信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "获取用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-model_UserInfoReadOnly"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            },
            "put": {
                "description": "更新用户的个人信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "更新用户信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "用户信息",
                        "name": "info",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UserInfo"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "请求参数错误",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/login": {
            "post": {
                "description": "Handles user login with username and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "loginRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.LoginParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "session-key=\u003csession_key\u003e; Path=/"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/login_with_code": {
            "post": {
                "description": "Handles user login with verification code",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Login with verification code",
                "parameters": [
                    {
                        "description": "Login With Code Request",
                        "name": "loginWithCodeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.UseCodeLoginParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        },
                        "headers": {
                            "Set-Cookie": {
                                "type": "string",
                                "description": "session-key=\u003csession_key\u003e; Path=/"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/logout": {
            "delete": {
                "description": "Handles user logout",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Logout",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-string"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/password/change": {
            "put": {
                "description": "Handles password change for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Change Password",
                "parameters": [
                    {
                        "description": "Change Password Request",
                        "name": "changePasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ChangePasswordParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/password/reset": {
            "put": {
                "description": "Handles password reset for a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Reset Password",
                "parameters": [
                    {
                        "description": "Reset Password Request",
                        "name": "resetPasswordRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ResetPasswordParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/register": {
            "post": {
                "description": "Handles user registration",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "description": "Registration Request",
                        "name": "registerRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.RegistrationParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/account/verify": {
            "post": {
                "description": "Handles sending verification code to the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Account"
                ],
                "summary": "Verification Code",
                "parameters": [
                    {
                        "description": "Verification Code Request",
                        "name": "verificationCodeRequest",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.VerificationParameters"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-string"
                        }
                    }
                }
            }
        },
        "/app_version": {
            "get": {
                "description": "根据应用ID获取最新的应用版本信息",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AppVersion"
                ],
                "summary": "获取应用版本信息",
                "parameters": [
                    {
                        "type": "string",
                        "description": "应用ID",
                        "name": "appid",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "成功",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-model_AppVersion"
                        }
                    },
                    "500": {
                        "description": "服务器内部错误",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/bill": {
            "get": {
                "description": "Get a list of bills",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Get bills",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Limit the number of results",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Offset for pagination",
                        "name": "offset",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-array_model_Bill"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Update an existing bill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Update a bill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Updated bill object",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-array_model_AddBillResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add a new bill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Add a bill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Bill object to be added",
                        "name": "bill",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.Bill"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-array_model_AddBillResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Delete a bill by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Delete a bill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "ID of the bill to be deleted",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/bill/list": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "Add multiple bills at once",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Bill"
                ],
                "summary": "Add a list of bills",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "List of bills to be added",
                        "name": "bills",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/model.Bill"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-array_model_AddBillResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/feedback": {
            "post": {
                "description": "处理用户提交的反馈信息",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "提交反馈",
                "parameters": [
                    {
                        "type": "string",
                        "name": "-",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "feedback",
                        "in": "formData"
                    },
                    {
                        "type": "integer",
                        "name": "id",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "label",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "name": "phone",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/model.JsonResponse-any"
                        }
                    }
                }
            }
        },
        "/openai/v1/audio/transcriptions": {
            "post": {
                "description": "Transcribe audio to text",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Audio transcriptions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Audio file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/openai/v1/audio/translations": {
            "post": {
                "description": "Translate audio from one language to another",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Audio translations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "Audio file",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/openai/v1/chat/completions": {
            "post": {
                "description": "Generate completions for a given prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Chat completions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Chat completion request object",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/openai.ChatCompletionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/openai.ChatCompletionResponse"
                        }
                    }
                }
            }
        },
        "/openai/v1/images/edits": {
            "post": {
                "description": "Edit images based on a given prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Images edits",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/openai/v1/images/variations": {
            "post": {
                "description": "Generate variations of images based on a given prompt",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Images variations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/openai/v1/models": {
            "get": {
                "description": "Get a list of available models",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "List models",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/openai.Model"
                            }
                        }
                    }
                }
            }
        },
        "/openai/v1/prices": {
            "get": {
                "description": "Get the pricing details for OpenAI services",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OpenAI"
                ],
                "summary": "Get prices",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/openai.Price"
                        }
                    }
                }
            }
        },
        "/textin/ai/service/v1/crop_enhance_image": {
            "post": {
                "description": "Crop enhance image",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Textin"
                ],
                "summary": "Crop enhance image",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/textin/ai/service/v1/dewarp": {
            "post": {
                "description": "dewarp",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Textin"
                ],
                "summary": "dewarp",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/textin/robot/v1.0/api/bills_crop": {
            "post": {
                "description": "Bills crop",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Textin"
                ],
                "summary": "Bills crop",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cookie",
                        "name": "cookie",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        }
    },
    "definitions": {
        "model.AddBillResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "images_comment": {
                    "$ref": "#/definitions/model.StringList"
                },
                "third_party_id": {
                    "type": "string"
                }
            }
        },
        "model.AppVersion": {
            "type": "object",
            "properties": {
                "app_name": {
                    "type": "string"
                },
                "appid": {
                    "type": "string"
                },
                "can_hide": {
                    "type": "boolean"
                },
                "changelog": {
                    "type": "string"
                },
                "created_at": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "download_url": {
                    "type": "string"
                },
                "is_force": {
                    "type": "boolean"
                },
                "updated_at": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "version_code": {
                    "type": "integer"
                },
                "version_name": {
                    "type": "string"
                }
            }
        },
        "model.Bill": {
            "type": "object",
            "properties": {
                "amount": {
                    "type": "integer"
                },
                "category": {
                    "type": "string"
                },
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "date": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "datetime": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "deleted_at": {
                    "$ref": "#/definitions/mytime.CustomNullTime"
                },
                "id": {
                    "type": "integer"
                },
                "images_comment": {
                    "$ref": "#/definitions/model.StringList"
                },
                "name": {
                    "type": "string"
                },
                "third_party_id": {
                    "type": "string"
                },
                "transaction_partner": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updated_at": {
                    "$ref": "#/definitions/mytime.CustomTime"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ChangePasswordParameters": {
            "type": "object",
            "properties": {
                "newPassword": {
                    "type": "string"
                },
                "oldPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-any": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-array_model_AddBillResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AddBillResponse"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-array_model_Bill": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Bill"
                    }
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-model_AppVersion": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.AppVersion"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-model_UserInfoReadOnly": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "$ref": "#/definitions/model.UserInfoReadOnly"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.JsonResponse-string": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                }
            }
        },
        "model.LoginParameters": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.RegistrationParameters": {
            "type": "object",
            "required": [
                "code",
                "password",
                "username"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.ResetPasswordParameters": {
            "type": "object",
            "required": [
                "code",
                "newPassword",
                "username"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "newPassword": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.StringList": {
            "type": "object",
            "properties": {
                "values": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "model.UseCodeLoginParameters": {
            "type": "object",
            "required": [
                "code",
                "username"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.UserInfo": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "campus": {
                    "type": "string"
                },
                "campusAddress": {
                    "type": "string"
                },
                "campusID": {
                    "type": "string"
                },
                "nickname": {
                    "type": "string"
                },
                "school": {
                    "type": "string"
                },
                "schoolID": {
                    "type": "integer"
                }
            }
        },
        "model.UserInfoReadOnly": {
            "type": "object",
            "properties": {
                "avatar": {
                    "type": "string"
                },
                "campus": {
                    "type": "string"
                },
                "campusAddress": {
                    "type": "string"
                },
                "campusID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "isHorseman": {
                    "type": "boolean"
                },
                "nickname": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "school": {
                    "type": "string"
                },
                "schoolID": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "model.VerificationParameters": {
            "type": "object",
            "required": [
                "codeType",
                "phoneOrEmail"
            ],
            "properties": {
                "codeType": {
                    "type": "string"
                },
                "phoneOrEmail": {
                    "type": "string"
                }
            }
        },
        "mytime.CustomNullTime": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "mytime.CustomTime": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "openai.ChatCompletionChoice": {
            "type": "object",
            "properties": {
                "finish_reason": {
                    "description": "FinishReason\nstop: API returned complete message,\nor a message terminated by one of the stop sequences provided via the stop parameter\nlength: Incomplete model output due to max_tokens parameter or token limit\nfunction_call: The model decided to call a function\ncontent_filter: Omitted content due to a flag from our content filters\nnull: API response still in progress or incomplete",
                    "allOf": [
                        {
                            "$ref": "#/definitions/openai.FinishReason"
                        }
                    ]
                },
                "index": {
                    "type": "integer"
                },
                "message": {
                    "$ref": "#/definitions/openai.ChatCompletionMessage"
                }
            }
        },
        "openai.ChatCompletionMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "function_call": {
                    "$ref": "#/definitions/openai.FunctionCall"
                },
                "name": {
                    "description": "This property isn't in the official documentation, but it's in\nthe documentation for the official library for python:\n- https://github.com/openai/openai-python/blob/main/chatml.md\n- https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "openai.ChatCompletionRequest": {
            "type": "object",
            "properties": {
                "frequency_penalty": {
                    "type": "number"
                },
                "function_call": {},
                "functions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/openai.FunctionDefinition"
                    }
                },
                "logit_bias": {
                    "description": "LogitBias is must be a token id string (specified by their token ID in the tokenizer), not a word string.\nincorrect: ` + "`" + `\"logit_bias\":{\"You\": 6}` + "`" + `, correct: ` + "`" + `\"logit_bias\":{\"1639\": 6}` + "`" + `\nrefs: https://platform.openai.com/docs/api-reference/chat/create#chat/create-logit_bias",
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "max_tokens": {
                    "type": "integer"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/openai.ChatCompletionMessage"
                    }
                },
                "model": {
                    "type": "string"
                },
                "n": {
                    "type": "integer"
                },
                "presence_penalty": {
                    "type": "number"
                },
                "stop": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "stream": {
                    "type": "boolean"
                },
                "temperature": {
                    "type": "number"
                },
                "top_p": {
                    "type": "number"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "openai.ChatCompletionResponse": {
            "type": "object",
            "properties": {
                "choices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/openai.ChatCompletionChoice"
                    }
                },
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "usage": {
                    "$ref": "#/definitions/openai.Usage"
                }
            }
        },
        "openai.FinishReason": {
            "type": "string",
            "enum": [
                "stop",
                "length",
                "function_call",
                "content_filter",
                "null"
            ],
            "x-enum-varnames": [
                "FinishReasonStop",
                "FinishReasonLength",
                "FinishReasonFunctionCall",
                "FinishReasonContentFilter",
                "FinishReasonNull"
            ]
        },
        "openai.FunctionCall": {
            "type": "object",
            "properties": {
                "arguments": {
                    "description": "call function with arguments in JSON format",
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "openai.FunctionDefinition": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "parameters": {
                    "description": "Parameters is an object describing the function.\nYou can pass json.RawMessage to describe the schema,\nor you can pass in a struct which serializes to the proper JSON schema.\nThe jsonschema package is provided for convenience, but you should\nconsider another specialized library if you require more complex schemas."
                }
            }
        },
        "openai.Model": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "object": {
                    "type": "string"
                },
                "owned_by": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "permission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/openai.Permission"
                    }
                },
                "root": {
                    "type": "string"
                }
            }
        },
        "openai.Permission": {
            "type": "object",
            "properties": {
                "allow_create_engine": {
                    "type": "boolean"
                },
                "allow_fine_tuning": {
                    "type": "boolean"
                },
                "allow_logprobs": {
                    "type": "boolean"
                },
                "allow_sampling": {
                    "type": "boolean"
                },
                "allow_search_indices": {
                    "type": "boolean"
                },
                "allow_view": {
                    "type": "boolean"
                },
                "created": {
                    "type": "integer"
                },
                "group": {},
                "id": {
                    "type": "string"
                },
                "is_blocking": {
                    "type": "boolean"
                },
                "object": {
                    "type": "string"
                },
                "organization": {
                    "type": "string"
                }
            }
        },
        "openai.Price": {
            "type": "object",
            "properties": {
                "unit": {
                    "type": "string"
                },
                "values": {}
            }
        },
        "openai.Usage": {
            "type": "object",
            "properties": {
                "completion_tokens": {
                    "type": "integer"
                },
                "prompt_tokens": {
                    "type": "integer"
                },
                "total_tokens": {
                    "type": "integer"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:10010",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "简单记账 API",
	Description:      "简单记账后端接口",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
